stages:
  - docs
  - build

# ------------------------
# Documentation generation
# ------------------------

pages:
  image: python:3.10
  stage: docs
  before_script:
    - pip install -U sphinx sphinx-rtd-theme
    - pip install -r requirements.txt
  script:
    - sphinx-apidoc -e -o docs .
    - sphinx-build -b html docs public
    - echo "Exposing built documentation via GitLab Pages"
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'

# ------------------------
# Docker Image Build
# ------------------------

build_image:
  image: docker:stable
  stage: build
  services:
    - name: docker:20-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        TAG="$CI_COMMIT_TAG"
      elif [ "$CI_COMMIT_BRANCH" = "main" ]; then
        TAG="latest"
      elif [ "$CI_COMMIT_BRANCH" = "development" ]; then
        TAG="staging"
      else
        TAG="dev"
      fi
    - docker build -t "${CI_REGISTRY_IMAGE}:$TAG" -f Dockerfile .
    - docker push "${CI_REGISTRY_IMAGE}:$TAG"
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "development"'
